// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.2.1-esm/index.mjs";import{primitives as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string-array@v0.2.1-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.1-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/object-assign@v0.2.1-esm/index.mjs";import s,{sync as i}from"https://cdn.jsdelivr.net/gh/stdlib-js/fs-read-file@v0.2.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.1-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@v0.2.1-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-keys@v0.2.1-esm/index.mjs";function l(e){if(e.__esModule)return e;var r=e.default;if("function"==typeof r){var t=function e(){return this instanceof e?Reflect.construct(r,arguments,this.constructor):r.apply(this,arguments)};t.prototype=r.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(e).forEach((function(r){var n=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,n.get?n:{enumerable:!0,get:function(){return e[r]}})})),t}var a=l(Object.freeze({__proto__:null,default:()=>()=>{}})),c=100,u=18e5;var m=clearTimeout;var p=a("read-file-list:async"),h=c,v=u;function g(e,i,l){var a,c,u,g,j,y,b,E;if(!r(e))throw new TypeError(o("0OD3s",e));if(arguments.length<3?(j={},b=i):(j=n({},i),b=l),!t(b))throw new TypeError(o("0OD2b",b));for(y=e.length,c=new Array(y),a={},g=0,p("Reading %d files...",y),E=0;E<y;E++)p("Reading file: %s (%d of %d).",e[E],E+1,y),s(e[E],j,w(E));function w(r){var t,n,i;function f(){delete a[r],p("Reading file: %s (%d of %d). Retry: %d of %d.",n,i,y,t,h),s(n,j,l)}function l(e,s){var l;if(!u)return e?(p("Encountered an error when reading %s (%d of %d). Error: %s",n,i,y,e.message),"EMFILE"===e.code||"ENFILE"===e.code?(t+=1)>h?(p("Maximum number of retries exceeded. Too many open files."),x(e=new Error(o("0OD0H")))):(l=function(e,r){var t=d(2,e)-1;return t>r&&(t=r),t}(t,v),p("Too many open files. Will retry reading file %d of %d in %s seconds.",i,y,l/1e3),void(a[r]=setTimeout(f,l))):x(e)):(p("Successfully read file: %s (%d of %d).",n,i,y),c[r]={file:n,data:s},p("Read %d of %d files.",g+=1,y),g===y?x():void 0);p("An error has already been returned. Discarding data for file: %s (%d of %d).",n,i,y)}return n=e[r],i=r+1,t=0,l}function x(e){if(function(e){var r,t;for(r=f(e),t=0;t<r.length;t++)m(e[r[t]])}(a),e)return u=!0,b(e);p("Successfully read all files."),b(null,c)}}var j=a("read-file-list:sync");function y(e,t){var n,s,d,f,l;if(!r(e))throw new TypeError(o("0OD3s",e));for(s=arguments.length>1?t:{},f=e.length,n=new Array(f),j("Reading %d files...",f),l=0;l<f;l++){if(j("Reading file: %s (%d of %d).",e[l],l+1,f),(d=i(e[l],s))instanceof Error)return j("Encountered an error when reading file: %s (%d of %d). Error: %s",e[l],l,f,d.message),d;j("Successfully read file: %s (%d of %d).",e[l],l,f),n[l]={file:e[l],data:d}}return j("Finished reading files."),n}e(g,"sync",y);export{g as default,y as sync};
//# sourceMappingURL=index.mjs.map
