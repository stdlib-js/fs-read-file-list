// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import{primitives as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string-array@v0.2.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/object-assign@v0.1.0-esm/index.mjs";import s,{sync as i}from"https://cdn.jsdelivr.net/gh/stdlib-js/fs-read-file@v0.2.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@v0.1.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-keys@v0.1.0-esm/index.mjs";function f(e){if(e.__esModule)return e;var r=e.default;if("function"==typeof r){var n=function e(){if(this instanceof e){var n=[null];n.push.apply(n,arguments);var t=Function.bind.apply(r,n);return new t}return r.apply(this,arguments)};n.prototype=r.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(e).forEach((function(r){var t=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(n,r,t.get?t:{enumerable:!0,get:function(){return e[r]}})})),n}var l=f(Object.freeze({__proto__:null,default:()=>()=>{}})),u=100,c=18e5;function m(e,r){var n=o(2,e)-1;return n>r&&(n=r),n}var p=clearTimeout;function g(e){var r,n;for(r=a(e),n=0;n<r.length;n++)p(e[r[n]])}var v=l("read-file-list:async"),y=u,h=c;function j(e,i,o){var a,f,l,u,c,p,j,b;if(!r(e))throw new TypeError(d("invalid argument. First argument must be an array of strings. Value: `%s`.",e));if(arguments.length<3?(c={},j=i):(c=t({},i),j=o),!n(j))throw new TypeError(d("invalid argument. Callback argument must be a function. Value: `%s`.",j));for(p=e.length,f=new Array(p),a={},u=0,v("Reading %d files...",p),b=0;b<p;b++)v("Reading file: %s (%d of %d).",e[b],b+1,p),s(e[b],c,w(b));function w(r){var n,t,i;function d(){delete a[r],v("Reading file: %s (%d of %d). Retry: %d of %d.",t,i,p,n,y),s(t,c,o)}function o(e,s){var o;if(!l)return e?(v("Encountered an error when reading %s (%d of %d). Error: %s",t,i,p,e.message),"EMFILE"===e.code||"ENFILE"===e.code?(n+=1)>y?(v("Maximum number of retries exceeded. Too many open files."),x(e=new Error("unexpected error. Max retries exceeded. Too many open files."))):(o=m(n,h),v("Too many open files. Will retry reading file %d of %d in %s seconds.",i,p,o/1e3),void(a[r]=setTimeout(d,o))):x(e)):(v("Successfully read file: %s (%d of %d).",t,i,p),f[r]={file:t,data:s},v("Read %d of %d files.",u+=1,p),u===p?x():void 0);v("An error has already been returned. Discarding data for file: %s (%d of %d).",t,i,p)}return t=e[r],i=r+1,n=0,o}function x(e){if(g(a),e)return l=!0,j(e);v("Successfully read all files."),j(null,f)}}var b=l("read-file-list:sync");function w(e,n){var t,s,o,a,f;if(!r(e))throw new TypeError(d("invalid argument. First argument must be an array of strings. Value: `%s`.",e));for(s=arguments.length>1?n:{},a=e.length,t=new Array(a),b("Reading %d files...",a),f=0;f<a;f++){if(b("Reading file: %s (%d of %d).",e[f],f+1,a),(o=i(e[f],s))instanceof Error)return b("Encountered an error when reading file: %s (%d of %d). Error: %s",e[f],f,a,o.message),o;b("Successfully read file: %s (%d of %d).",e[f],f,a),t[f]={file:e[f],data:o}}return b("Finished reading files."),t}e(j,"sync",w);export{j as default,w as sync};
//# sourceMappingURL=index.mjs.map
